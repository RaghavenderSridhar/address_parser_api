###mmcv download path

http://download.openmmlab.com/mmcv/dist/index.html

####torch download
https://download.pytorch.org/whl/torch_stable.html


###torch vision files

https://pypi.org/project/torchvision/0.6.1/#files

###hrnet path
https://github.com/HRNet/HRNet-Object-Detection/blob/master/README.md

###all content drive

https://drive.google.com/drive/folders/1mNDbbhu-Ubz87oRDjdtLA4BwQwwNOO-G

###model path
https://github.com/doc-analysis/TableBank/blob/master/MODEL_ZOO.md


!pip install torch==1.4.0+cu100 torchvision==0.5.0+cu100 -f https://download.pytorch.org/whl/torch_stable.html
!pip install -q mmcv terminaltables
!git clone --branch v1.2.0 'https://github.com/open-mmlab/mmdetection.git'
%cd "mmdetection"
!pip install -r "/content/mmdetection/requirements/optional.txt"
!python setup.py install
!python setup.py develop
!pip install -r {"requirements.txt"}
!pip install pillow==6.2.1 
!pip install mmcv==0.4.3
%cd "/content"

####
export CUDA_HOME=/usr/local/cuda-11.2
CUDA_HOST_COMPILER=/usr/bin/gcc-5 python setup.py build develop
CUDA_HOST_COMPILER=/usr/bin/gcc-7 python setup.py build develop

####

check for all gcc
sudo update-alternatives --config gcc

###removing cuda
sudo apt-get remove --auto-remove nvidia-cuda-toolkit
sudo apt-get purge nvidia*
sudo apt-get autoremove
sudo apt-get autoclean
sudo rm -rf /usr/local/cuda*

####removing all pip
pip uninstall -y -r <(pip freeze)

###
pip install mmcv-full -f https://download.openmmlab.com/mmcv/dist/11.0/1.7.1/index.html

pip install mmcv-full -f https://download.openmmlab.com/mmcv/dist/cu111/torch1.8.0/index.html

pip install torch==1.7.1+cu110 torchvision==0.8.2+cu110 torchaudio===0.7.2 -f https://download.pytorch.org/whl/torch_stable.html

export LD_LIBRARY_PATH=/home/raghav/cuda/lib64:$LD_LIBRARY_PATH

pip install torch torchvision torchaudio -f https://download.pytorch.org/whl/torch_stable.html

##cuda repository

https://developer.download.nvidia.com/compute/cuda/repos/

#### testing if pytorch is using gpu

>>> # How many GPUs are there?
print(torch.cuda.device_count())

print(torch.cuda.get_device_name(torch.cuda.current_device()))

print(torch.cuda.is_available())

####testing
export CUDNN_LIBRARY_PATH ="/home/raghav/cuda/lib64"
export CUDNN_INCLUDE_PATH="/home/raghav/cuda/include/"

###for tensorflow gpu need 
pip install tf-nightly-gpu


cuda9.2-env

export PATH=$PATH:/usr/local/cuda-9.2/bin
export CUDADIR=/usr/local/cuda-9.2
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda-9.2/lib64
cuda10.0-env

export PATH=$PATH:/usr/local/cuda-10.0/bin
export CUDADIR=/usr/local/cuda-10.0
export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/usr/local/cuda-10.0/lib64


Same issue for me too. CUDA 11.2 , cudNN 8.1 , tensorflow==2.4.1


###cuda
sudo dpkg -i cuda-repo-ubuntu2004-11-3-local_11.3.1-465.19.01-1_amd64.deb
sudo apt-key add /var/cuda-repo-ubuntu2004-11-3-local/7fa2af80.pub
sudo apt-get update
sudo apt-get -y install cuda

###checking version of cuda
cat /usr/local/cuda/version.txt


##### removing nvidia

sudo apt-get remove --purge '^nvidia-.*'
sudo apt autoremove

####cuda 11.0 pytorch
ip install torch==1.7.1+cu110 torchvision==0.8.2+cu110 torchaudio===0.7.2 -f https://download.pytorch.org/whl/torch_stable.html

Ubuntu 18.04 (CUDA 11.0)

# Add NVIDIA package repositories
wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-ubuntu1804.pin
sudo mv cuda-ubuntu1804.pin /etc/apt/preferences.d/cuda-repository-pin-600
sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af80.pub
sudo add-apt-repository "deb https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/ /"
sudo apt-get update

wget http://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/nvidia-machine-learning-repo-ubuntu1804_1.0.0-1_amd64.deb

sudo apt install ./nvidia-machine-learning-repo-ubuntu1804_1.0.0-1_amd64.deb
sudo apt-get update

wget https://developer.download.nvidia.com/compute/machine-learning/repos/ubuntu1804/x86_64/libnvinfer7_7.1.3-1+cuda11.0_amd64.deb
sudo apt install ./libnvinfer7_7.1.3-1+cuda11.0_amd64.deb
sudo apt-get update

# Install development and runtime libraries (~4GB)
sudo apt-get install --no-install-recommends \
    cuda-11-0 \
    libcudnn8=8.0.4.30-1+cuda11.0  \
    libcudnn8-dev=8.0.4.30-1+cuda11.0

# Reboot. Check that GPUs are visible using the command: nvidia-smi

# Install TensorRT. Requires that libcudnn8 is installed above.
sudo apt-get install -y --no-install-recommends libnvinfer7=7.1.3-1+cuda11.0 \
    libnvinfer-dev=7.1.3-1+cuda11.0 \
    libnvinfer-plugin7=7.1.3-1+cuda11.0


##enable firewall

sudo ufw enable


sudo ufw default deny

And I then do:

sudo iptables -L

###git config
git config --global url.git://github.com/.insteadOf https://github.com/
git config --global url.https://github.com/.insteadOf git://github.com/
